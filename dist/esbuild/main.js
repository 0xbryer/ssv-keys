"use strict";(()=>{var Nr=Object.create;var sr=Object.defineProperty;var gr=Object.getOwnPropertyDescriptor;var Br=Object.getOwnPropertyNames;var Lr=Object.getPrototypeOf,Tr=Object.prototype.hasOwnProperty;var a=(i=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(i,{get:(r,e)=>(typeof require!="undefined"?require:r)[e]}):i)(function(i){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+i+'" is not supported')});var Yr=(i,r,e,t)=>{if(r&&typeof r=="object"||typeof r=="function")for(let s of Br(r))!Tr.call(i,s)&&s!==e&&sr(i,s,{get:()=>r[s],enumerable:!(t=gr(r,s))||t.enumerable});return i};var f=(i,r,e)=>(e=i!=null?Nr(Lr(i)):{},Yr(r||!i||!i.__esModule?sr(e,"default",{value:i,enumerable:!0}):e,i));var p=(i,r,e,t)=>{for(var s=t>1?void 0:t?gr(r,e):r,n=i.length-1,o;n>=0;n--)(o=i[n])&&(s=(t?o(r,e,s):o(s))||s);return t&&s&&sr(r,e,s),s};var u=(i,r,e)=>new Promise((t,s)=>{var n=y=>{try{h(e.next(y))}catch(l){s(l)}},o=y=>{try{h(e.throw(y))}catch(l){s(l)}},h=y=>y.done?t(y.value):Promise.resolve(y.value).then(n,o);h((e=e.apply(i,r)).next())});var kr=f(a("atob")),ur=a("js-base64");var d=a("class-validator");var Er=f(a("underscore")),K=a("class-validator");var ir;try{window.crypto,ir=a("bls-eth-wasm/browser")}catch(i){ir=a("bls-eth-wasm")}var c=ir;var b=a("class-validator");var Kr=a("js-base64");var ar;try{window.crypto,ar=a("jsencrypt").JSEncrypt}catch(i){ar=a("node-jsencrypt")}var z=ar;var F=a("js-base64");var k=class extends Error{constructor(e,t){super(t);this.operator=e}},R=class{constructor(r,e){this.RAW_OPERATOR_PUBLIC_KEY_SIGNATURE=RegExp(/------BEGIN RSA PUBLIC KEY-----/,"gmi");this.operators=r.map(t=>this.RAW_OPERATOR_PUBLIC_KEY_SIGNATURE.test(t)?t:(0,F.decode)(t)),this.shares=e}encrypt(){let r=[];return Object.keys(this.operators).forEach(e=>{let t=new z({});try{t.setPublicKey(this.operators[e])}catch(o){throw new k({rsa:this.operators[e],base64:(0,F.encode)(this.operators[e])},`Operator is not valid RSA Public Key: ${o}`)}let s=t.encrypt(this.shares[e].privateKey),n={operatorPublicKey:this.operators[e],privateKey:String(s),publicKey:this.shares[e].publicKey};return r.push(n),n}),r}};var M=i=>{try{let r="Invalid operator key format, make sure the operator exists in the network",e=(0,Kr.decode)(i);if(!e.startsWith("-----BEGIN RSA PUBLIC KEY-----"))throw Error(r);let t=new z({});try{t.setPublicKey(e)}catch(s){throw new k({rsa:e,base64:i},r)}return!0}catch(r){let{message:e}=r;return e}};var N=class{setData(r){r.id&&(this.id=r.id),r.publicKey&&(this.publicKey=r.publicKey)}validate(){if(!Number.isInteger(this.id))throw Error("Operator ID should be integer");let r=M(this.publicKey||"");if(r!==!0)throw Error(String(r))}};p([(0,b.IsNotEmpty)(),(0,b.IsDefined)(),(0,b.IsInt)()],N.prototype,"id",2),p([(0,b.IsNotEmpty)(),(0,b.IsDefined)(),(0,b.IsString)(),(0,b.MinLength)(98)],N.prototype,"publicKey",2);var Sr=f(a("web3")),Ir=f(a("underscore")),vr=a("js-base64"),L=a("class-validator");var Cr=new Sr.default,B=class{setData(r){r.publicKeys&&(this.validateArrayOfStrings(r.publicKeys),this.publicKeys=r.publicKeys),r.encryptedKeys&&(this.validateArrayOfStrings(r.encryptedKeys),this.encryptedKeys=r.encryptedKeys)}validate(){this.validatePublicKeys(),this.validateEncryptedKeys()}validateEncryptedKeys(){let r="";try{(this.encryptedKeys||[]).map(e=>{let t=e;t.startsWith("0x")&&(r=t,t=Cr.eth.abi.decodeParameter("string",e)),(0,vr.decode)(String(t))})}catch(e){throw Error(`Can not ABI decode shares encrypted key: ${r}. Error: ${String(e)}`)}}validatePublicKeys(){let r="";try{for(let e of this.publicKeys||[])r=e,c.deserializeHexStrToPublicKey(e.replace("0x",""))}catch(e){throw Error(`Can not BLS deserialize shares public key: ${r}. Error: ${String(e)}`)}}validateArrayOfStrings(r){if(!Ir.default.isArray(r)||!r.every(t=>typeof t=="string"))throw Error("Keys should be an array of strings")}};p([(0,L.IsArray)(),(0,L.MinLength)(98,{each:!0})],B.prototype,"publicKeys",2),p([(0,L.IsArray)(),(0,L.MinLength)(98,{each:!0})],B.prototype,"encryptedKeys",2);var T=class extends Error{constructor(e,t){super(t);this.operator=e}},Y=class extends Error{constructor(e,t){super(t);this.operator=e}},C=class extends Error{constructor(e,t,s){super(s);this.operators=e,this.shares=t}};var V=class extends Error{constructor(e,t){super(t);this.publicKey=e}};var A=class{constructor(){this.publicKey=null;this.operators=null;this.shares=null}setData(r){if(r.publicKey&&(this.publicKey=r.publicKey),r.operators&&(this.operators=r.operators.map(e=>{let t=new N;return t.setData(e),t})),r.shares){let e=new B;Er.default.isArray(r.shares)?e.setData({publicKeys:r.shares.map(t=>t.publicKey),encryptedKeys:r.shares.map(t=>t.privateKey)}):e.setData(r.shares),this.shares=e}}validate(){return u(this,null,function*(){var r;this.validateDuplicates(),c.init(c.BLS12_381),this.validateCounts(),(r=this.shares)==null||r.validate(),this.validatePublicKey(),this.validateOperators()})}get sharesPublicKeys(){var r;return((r=this.shares)==null?void 0:r.publicKeys)||[]}get sharesEncryptedKeys(){var r;return((r=this.shares)==null?void 0:r.encryptedKeys)||[]}get operatorIds(){var r;return(r=this.operators)!=null&&r.length?this.operators.map(e=>parseInt(String(e.id),10)):[]}get operatorPublicKeys(){var r;return(r=this.operators)!=null&&r.length?this.operators.map(e=>String(e.publicKey)):[]}validatePublicKey(){if(!!this.publicKey)try{c.deserializeHexStrToPublicKey(this.publicKey.replace("0x",""))}catch(r){throw new V(this.publicKey,"Can not BLS deserialize validator public key")}}validateCounts(){var r,e;if(!(!((r=this.sharesEncryptedKeys)!=null&&r.length)||!((e=this.sharesPublicKeys)!=null&&e.length))&&(this.operatorIds.length!==this.sharesEncryptedKeys.length||this.operatorIds.length!==this.sharesPublicKeys.length||this.operatorIds.length!==this.operatorPublicKeys.length))throw new C(this.operators||[],this.shares,"Length of operators and shares should be equal.")}validateOperators(){for(let r of this.operators||[])r.validate()}validateDuplicates(){let r={},e={};for(let t of this.operators||[]){if(r[String(t.id)]===!0)throw new T(t,"Operator ID already exists");if(r[String(t.id)]=!0,e[String(t.publicKey)]===!0)throw new Y(t,"Operator public key already exists");e[String(t.publicKey)]=!0}}};p([(0,K.IsOptional)(),(0,K.IsString)(),(0,K.Length)(98,98)],A.prototype,"publicKey",2),p([(0,K.IsOptional)(),(0,K.ValidateNested)({each:!0})],A.prototype,"operators",2),p([(0,K.IsOptional)(),(0,K.ValidateNested)()],A.prototype,"shares",2);var or=f(a("underscore"));var Pr=f(a("web3")),J=new Pr.default,wr=(i,r)=>i.map(e=>{let t=r?Object(e)[r]:e;return String(t).startsWith("0x")?t:J.eth.abi.encodeParameter("string",t)});var O=a("class-validator");var D=class{constructor(){this.readable=null;this.raw=null}build(r){return[r.validatorPublicKey,r.operatorsIds.join(","),r.encryptedShares.map(e=>e.publicKey),wr(r.encryptedShares,"privateKey"),r.ssvAmount]}setData(r){if(!r===null){this.raw=null,this.readable=null;return}if(or.default.isArray(r)){this.raw=this.toRaw(r),this.readable=this.toReadable(r);return}or.default.isObject(r)&&(r.readable&&(this.readable=r.readable),r.raw&&(this.raw=r.raw))}toRaw(r){return r.join(",")}toReadable(r){return{validatorPublicKey:r[D.PAYLOAD_INDEX_VALIDATOR_PUBLIC_KEY],operatorIds:r[D.PAYLOAD_INDEX_OPERATOR_IDS],sharePublicKeys:r[D.PAYLOAD_INDEX_SHARE_PUBLIC_KEYS],sharePrivateKey:r[D.PAYLOAD_INDEX_SHARE_PRIVATE_KEYS],ssvAmount:r[D.PAYLOAD_INDEX_SSV_AMOUNT]}}validate(){return u(this,null,function*(){})}},S=D;S.PAYLOAD_INDEX_VALIDATOR_PUBLIC_KEY=0,S.PAYLOAD_INDEX_OPERATOR_IDS=1,S.PAYLOAD_INDEX_SHARE_PUBLIC_KEYS=2,S.PAYLOAD_INDEX_SHARE_PRIVATE_KEYS=3,S.PAYLOAD_INDEX_SSV_AMOUNT=4,p([(0,O.IsOptional)(),(0,O.IsObject)()],S.prototype,"readable",2),p([(0,O.IsOptional)(),(0,O.IsString)()],S.prototype,"raw",2);var xr=f(a("underscore")),I=a("class-validator");var g=a("class-validator");var U=class{setData(r){r.id&&(this.id=r.id),r.publicKey&&(this.publicKey=r.publicKey)}validate(){if(!Number.isInteger(this.id))throw Error("Operator ID should be integer");let r=M(this.publicKey||"");if(r!==!0)throw Error(String(r))}};p([(0,g.IsNotEmpty)(),(0,g.IsDefined)(),(0,g.IsInt)()],U.prototype,"id",2),p([(0,g.IsNotEmpty)(),(0,g.IsDefined)(),(0,g.IsString)(),(0,g.MinLength)(98)],U.prototype,"publicKey",2);var Ar=f(a("web3")),Dr=f(a("underscore")),Or=a("js-base64"),$=a("class-validator");var Vr=new Ar.default,H=class{setData(r){r.publicKeys&&(this.validateArrayOfStrings(r.publicKeys),this.publicKeys=r.publicKeys),r.encryptedKeys&&(this.validateArrayOfStrings(r.encryptedKeys),this.encryptedKeys=r.encryptedKeys)}validate(){this.validatePublicKeys(),this.validateEncryptedKeys()}validateEncryptedKeys(){let r="";try{(this.encryptedKeys||[]).map(e=>{let t=e;t.startsWith("0x")&&(r=t,t=Vr.eth.abi.decodeParameter("string",e)),(0,Or.decode)(String(t))})}catch(e){throw Error(`Can not ABI decode shares encrypted key: ${r}. Error: ${String(e)}`)}}validatePublicKeys(){let r="";try{for(let e of this.publicKeys||[])r=e,c.deserializeHexStrToPublicKey(e.replace("0x",""))}catch(e){throw Error(`Can not BLS deserialize shares public key: ${r}. Error: ${String(e)}`)}}validateArrayOfStrings(r){if(!Dr.default.isArray(r)||!r.every(t=>typeof t=="string"))throw Error("Keys should be an array of strings")}};p([(0,$.IsArray)(),(0,$.MinLength)(98,{each:!0})],H.prototype,"publicKeys",2),p([(0,$.IsArray)(),(0,$.MinLength)(98,{each:!0})],H.prototype,"encryptedKeys",2);var x=class{constructor(){this.publicKey=null;this.operators=null;this.shares=null}setData(r){if(r.publicKey&&(this.publicKey=r.publicKey),r.operators&&(this.operators=r.operators.map(e=>{let t=new U;return t.setData(e),t})),r.shares){let e=new H;xr.default.isArray(r.shares)?e.setData({publicKeys:r.shares.map(t=>t.publicKey),encryptedKeys:r.shares.map(t=>t.privateKey)}):e.setData(r.shares),this.shares=e}}validate(){var r;this.validateDuplicates(),c.init(c.BLS12_381),this.validateCounts(),(r=this.shares)==null||r.validate(),this.validatePublicKey(),this.validateOperators()}get sharesPublicKeys(){var r;return((r=this.shares)==null?void 0:r.publicKeys)||[]}get sharesEncryptedKeys(){var r;return((r=this.shares)==null?void 0:r.encryptedKeys)||[]}get operatorIds(){var r;return(r=this.operators)!=null&&r.length?this.operators.map(e=>parseInt(String(e.id),10)):[]}get operatorPublicKeys(){var r;return(r=this.operators)!=null&&r.length?this.operators.map(e=>String(e.publicKey)):[]}validatePublicKey(){if(!!this.publicKey)try{c.deserializeHexStrToPublicKey(this.publicKey.replace("0x",""))}catch(r){throw new V(this.publicKey,"Can not BLS deserialize validator public key")}}validateCounts(){var r,e;if(!(!((r=this.sharesEncryptedKeys)!=null&&r.length)||!((e=this.sharesPublicKeys)!=null&&e.length))&&(this.operatorIds.length!==this.sharesEncryptedKeys.length||this.operatorIds.length!==this.sharesPublicKeys.length||this.operatorIds.length!==this.operatorPublicKeys.length))throw new C(this.operators||[],this.shares,"Length of operators and shares should be equal.")}validateOperators(){for(let r of this.operators||[])r.validate()}validateDuplicates(){let r={},e={};for(let t of this.operators||[]){if(r[String(t.id)]===!0)throw new T(t,"Operator ID already exists");if(r[String(t.id)]=!0,e[String(t.publicKey)]===!0)throw new Y(t,"Operator public key already exists");e[String(t.publicKey)]=!0}}};p([(0,I.IsOptional)(),(0,I.IsString)(),(0,I.Length)(98,98)],x.prototype,"publicKey",2),p([(0,I.IsOptional)(),(0,I.ValidateNested)({each:!0})],x.prototype,"operators",2),p([(0,I.IsOptional)(),(0,I.ValidateNested)()],x.prototype,"shares",2);var nr=f(a("underscore")),q=f(a("ethers")),_=a("class-validator");var X=class{constructor(){this.readable=null;this.raw=null}decodeRSAShares(r){return r.map(e=>"0x"+Buffer.from(e,"base64").toString("hex"))}sharesToBytes(r,e){let t=this.decodeRSAShares(e),s=new Uint8Array(r.map(l=>[...q.utils.arrayify(l)]).flat()),n=new Uint8Array(t.map(l=>[...q.utils.arrayify(l)]).flat()),o=q.utils.hexlify(s),h=String(o.length.toString(16)).padStart(4,"0"),y=Buffer.concat([s,n]);return`0x${h}${y.toString("hex")}`}build(r){return[r.validatorPublicKey,r.operatorsIds.join(","),this.sharesToBytes(r.encryptedShares.map(e=>e.publicKey),r.encryptedShares.map(e=>e.privateKey)),r.ssvAmount]}setData(r){if(!r===null){this.raw=null,this.readable=null;return}if(nr.default.isArray(r)){this.raw=this.toRaw(r),this.readable=this.toReadable(r);return}nr.default.isObject(r)&&(r.readable&&(this.readable=r.readable),r.raw&&(this.raw=r.raw))}toRaw(r){return r.join(",")}toReadable(r){return{validatorPublicKey:r[X.PAYLOAD_INDEX_VALIDATOR_PUBLIC_KEY],operatorIds:r[X.PAYLOAD_INDEX_OPERATOR_IDS],shares:r[X.PAYLOAD_INDEX_SHARES_KEYS],ssvAmount:r[X.PAYLOAD_INDEX_SSV_AMOUNT]}}validate(){}},v=X;v.PAYLOAD_INDEX_VALIDATOR_PUBLIC_KEY=0,v.PAYLOAD_INDEX_OPERATOR_IDS=1,v.PAYLOAD_INDEX_SHARES_KEYS=2,v.PAYLOAD_INDEX_SSV_AMOUNT=3,p([(0,_.IsOptional)(),(0,_.IsObject)()],v.prototype,"readable",2),p([(0,_.IsOptional)(),(0,_.IsString)()],v.prototype,"raw",2);var W=class{constructor({version:r}){this.byVersion={payload:{[W.VERSION_V2]:S,[W.VERSION_V3]:v},data:{[W.VERSION_V2]:A,[W.VERSION_V3]:x}};this.version=r,this.data=this.getByVersion("data",r),this.payload=this.getByVersion("payload",r)}generateContractPayload(r){var t;let e=this.payload.build(r);(t=this.payload)==null||t.setData(e)}setData(r){this.useData(r)}getByVersion(r,e){if(!this.byVersion[r])throw Error(`"${r}" is unknown entity`);if(!this.byVersion[r][e])throw Error(`"${r}" is not supported in version of key shares: ${e}`);return new this.byVersion[r][e]}useData(r){!r||(this.data.setData(r),this.validate())}validate(){var r,e;(r=this.payload)==null||r.validate(),(e=this.data)==null||e.validate(),(0,d.validateOrReject)(this).then().catch(t=>{throw Error(t)})}fromJson(r){return typeof r=="string"&&(r=JSON.parse(r)),this.setData(r.data),this}toJson(){return JSON.stringify({version:this.version,data:this.data||null,payload:this.payload||null,createdAt:new Date().toISOString()},null,"  ")}},E=W;E.VERSION_V2="v2",E.VERSION_V3="v3",p([(0,d.IsString)(),(0,d.IsDefined)(),(0,d.IsNotEmpty)()],E.prototype,"version",2),p([(0,d.IsOptional)(),(0,d.ValidateNested)()],E.prototype,"data",2),p([(0,d.IsOptional)(),(0,d.ValidateNested)()],E.prototype,"payload",2);var pr=class extends Error{constructor(e,t){super(t);this.operators=e}},cr=class extends Error{constructor(e,t){super(t);this.operator=e}},lr=class{constructor(){this.shares=[]}static get DEFAULT_THRESHOLD_NUMBER(){return 3}create(r,e){return u(this,null,function*(){e.map(s=>{if(!Number.isInteger(s))throw new cr(s,`Operator must be integer. Got: ${String(s)}`)});let t=(e.length-1)/3;if(!Number.isInteger(t))throw new pr(e,"Invalid operators length. It should satisfy conditions: \u2016 Operators \u2016 := 3 * F + 1 ; F \u2208 \u2115");return new Promise((s,n)=>{try{c.init(c.BLS12_381).then(()=>{let o=[],h=[];this.validatorPrivateKey=c.deserializeHexStrToSecretKey(r),this.validatorPublicKey=this.validatorPrivateKey.getPublicKey(),o.push(this.validatorPrivateKey),h.push(this.validatorPublicKey);for(let l=1;l<e.length-t;l+=1){let m=new c.SecretKey;m.setByCSPRNG(),o.push(m);let P=m.getPublicKey();h.push(P)}for(let l of e){let m=new c.Id;m.setInt(l);let P=new c.SecretKey;P.share(o,m);let w=new c.PublicKey;w.share(h,m),this.shares.push({privateKey:`0x${P.serializeToHexStr()}`,publicKey:`0x${w.serializeToHexStr()}`,id:m})}let y={validatorPrivateKey:`0x${this.validatorPrivateKey.serializeToHexStr()}`,validatorPublicKey:`0x${this.validatorPublicKey.serializeToHexStr()}`,shares:this.shares};s(y)})}catch(o){n(o)}})})}},G=lr;var yr=f(a("crypto")),_r=a("scrypt-js"),Q=f(a("ethereumjs-wallet")),Z=a("ethereumjs-util");var hr=class{constructor(r){this.privateKey="";if(!r)throw new Error("Key store data should be JSON or string");if(typeof r=="string"?this.keyStoreData=JSON.parse(r):this.keyStoreData=r,!this.keyStoreData.version)throw new Error("Invalid keystore file")}getPublicKey(){var r;if(this.keyStoreData)switch((r=this.keyStoreData.version)!=null?r:this.keyStoreData.Version){case 1:return this.keyStoreData.Address;case 3:return this.keyStoreData.id;case 4:return this.keyStoreData.pubkey}return""}getPrivateKey(r=""){return u(this,null,function*(){if(this.privateKey)return this.privateKey;switch(this.keyStoreData.version){case 1:this.wallet=yield Q.default.fromV1(this.keyStoreData,r);break;case 3:this.wallet=yield Q.default.fromV3(this.keyStoreData,r,!0);break;case 4:this.wallet=yield this.fromV4(this.keyStoreData,r);break}if(this.wallet&&(this.privateKey=this.wallet.getPrivateKey().toString("hex"),!this.privateKey))throw new Error("Invalid password");return this.privateKey})}fromV4(r,e){return u(this,null,function*(){let t=typeof r=="object"?r:JSON.parse(r);if(t.version!==4)throw new Error("Not a V4 wallet");let s,n;if(t.crypto.kdf.function==="scrypt")n=t.crypto.kdf.params,s=(0,_r.syncScrypt)(Buffer.from(e),Buffer.from(n.salt,"hex"),n.n,n.r,n.p,n.dklen);else if(t.crypto.kdf.function==="pbkdf2"){if(n=t.crypto.kdf.params,n.prf!=="hmac-sha256")throw new Error("Unsupported parameters to PBKDF2");s=yr.default.pbkdf2Sync(Buffer.from(e),Buffer.from(n.salt,"hex"),n.c,n.dklen,"sha256")}else throw new Error("Unsupported key derivation scheme");let o=Buffer.from(t.crypto.cipher.message,"hex"),h=Buffer.concat([Buffer.from(s.slice(16,32)),o]),l={keccak256:Z.keccak256,sha256:Z.sha256}[t.crypto.checksum.function];if(l(h).toString("hex")!==t.crypto.checksum.message)throw new Error("Invalid password");let P=yr.default.createDecipheriv(t.crypto.cipher.function,s.slice(0,16),Buffer.from(t.crypto.cipher.params.iv,"hex")),w=this.runCipherBuffer(P,o);return new Q.default(w)})}runCipherBuffer(r,e){return Buffer.concat([r.update(e),r.final()])}static toHexString(r){return Array.from(r,e=>`0${(e&255).toString(16)}`.slice(-2)).join("")}},rr=hr;var er=class{constructor(r){this.web3Instances={};if(!Object.values(er.VERSION).includes(r))throw Error("Version is not supported");this.version=r,this.keySharesInstance=new E({version:this.version})}get keyShares(){return this.keySharesInstance}getPrivateKeyFromKeystoreData(r,e){return u(this,null,function*(){try{return yield new rr(r).getPrivateKey(e).then(s=>s)}catch(t){return t}})}createThreshold(r,e){return u(this,null,function*(){try{let t=new G;return this.threshold=yield t.create(r,e),this.threshold}catch(t){return t}})}encryptShares(r,e,t=""){return u(this,null,function*(){try{let s=r.map(o=>String((0,ur.encode)((0,kr.default)(o))));return new R(s,e).encrypt().map(o=>(o.operatorPublicKey=(0,ur.encode)(o.operatorPublicKey),t===er.SHARES_FORMAT_ABI&&(o.operatorPublicKey=J.eth.abi.encodeParameter("string",o.operatorPublicKey),o.privateKey=J.eth.abi.encodeParameter("string",o.privateKey)),o))}catch(s){return s}})}buildShares(r,e,t){return u(this,null,function*(){let s=yield this.createThreshold(r,e);return this.encryptShares(t,s.shares)})}getThreshold(){return this.threshold}getValidatorPublicKey(){var r;return((r=this.getThreshold())==null?void 0:r.validatorPublicKey)||""}buildPayload(r,e,t,s){return this.keyShares.generateContractPayload({validatorPublicKey:r,operatorsIds:e,encryptedShares:t,ssvAmount:s}),this.keyShares.payload}buildPayloadFromKeyShares(r,e){var h,y,l,m,P,w,dr,fr,mr,br;let t=((y=(h=r.data)==null?void 0:h.shares)==null?void 0:y.publicKeys)||[],s=(l=r.data)==null?void 0:l.publicKey,n=((P=(m=r.data)==null?void 0:m.shares)==null?void 0:P.encryptedKeys)||[],o=((w=r.data)==null?void 0:w.operatorPublicKeys)||[];if(t.length!==n.length||t.length!==o.length||n.length!==o.length||!n.length||!o.length||!t.length)throw Error("Operator public keys and shares public/encrypted keys length does not match or have zero length.");return this.keyShares.generateContractPayload({validatorPublicKey:s,operatorsIds:(fr=(dr=r.data)==null?void 0:dr.operators)==null?void 0:fr.map(tr=>tr.id),encryptedShares:t.map((tr,Rr)=>({publicKey:tr,privateKey:n[Rr]})),ssvAmount:e||((br=(mr=r.payload)==null?void 0:mr.readable)==null?void 0:br.ssvAmount)||0}),this.keyShares.payload}},j=er;j.SHARES_FORMAT_ABI="abi",j.VERSION={V2:"v2",V3:"v3"};})();
