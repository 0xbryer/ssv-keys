"use strict";(()=>{var Br=Object.create;var nr=Object.defineProperty;var vr=Object.getOwnPropertyDescriptor;var Lr=Object.getOwnPropertyNames;var Yr=Object.getPrototypeOf,Ur=Object.prototype.hasOwnProperty;var n=(i=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(i,{get:(r,e)=>(typeof require!="undefined"?require:r)[e]}):i)(function(i){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+i+'" is not supported')});var Hr=(i,r,e,t)=>{if(r&&typeof r=="object"||typeof r=="function")for(let s of Lr(r))!Ur.call(i,s)&&s!==e&&nr(i,s,{get:()=>r[s],enumerable:!(t=vr(r,s))||t.enumerable});return i};var v=(i,r,e)=>(e=i!=null?Br(Yr(i)):{},Hr(r||!i||!i.__esModule?nr(e,"default",{value:i,enumerable:!0}):e,i));var c=(i,r,e,t)=>{for(var s=t>1?void 0:t?vr(r,e):r,o=i.length-1,a;o>=0;o--)(a=i[o])&&(s=(t?a(r,e,s):a(s))||s);return t&&s&&nr(r,e,s),s};var h=(i,r,e)=>new Promise((t,s)=>{var o=l=>{try{y(e.next(l))}catch(p){s(p)}},a=l=>{try{y(e.throw(l))}catch(p){s(p)}},y=l=>l.done?t(l.value):Promise.resolve(l.value).then(o,a);y((e=e.apply(i,r)).next())});var Nr=v(n("atob")),gr=n("js-base64");var d=n("class-validator");var Rr=v(n("underscore")),m=n("class-validator");var g=n("class-validator");var W=n("class-validator");var Er=n("js-base64");var cr;try{window.crypto,cr=n("jsencrypt").JSEncrypt}catch(i){cr=n("node-jsencrypt")}var C=cr;var X=n("js-base64");var D=class extends Error{constructor(e,t){super(t);this.operator=e}},O=class{constructor(r,e){this.RAW_OPERATOR_PUBLIC_KEY_SIGNATURE=RegExp(/------BEGIN RSA PUBLIC KEY-----/,"gmi");this.operators=r.map(t=>this.RAW_OPERATOR_PUBLIC_KEY_SIGNATURE.test(t)?t:(0,X.decode)(t)),this.shares=e}encrypt(){let r=[];return Object.keys(this.operators).forEach(e=>{let t=new C({});try{t.setPublicKey(this.operators[e])}catch(a){throw new D({rsa:this.operators[e],base64:(0,X.encode)(this.operators[e])},`Operator is not valid RSA Public Key: ${a}`)}let s=t.encrypt(this.shares[e].privateKey),o={operatorPublicKey:this.operators[e],privateKey:String(s),publicKey:this.shares[e].publicKey};return r.push(o),o}),r}};var Pr=i=>{try{let r="Invalid operator key format, make sure the operator exists in the network",e=(0,Er.decode)(i);if(i.length<98)throw Error("The length of the operator public key must be at least 98 characters.");if(!e.startsWith("-----BEGIN RSA PUBLIC KEY-----"))throw Error(r);let t=new C({});try{t.setPublicKey(e)}catch(s){throw new D({rsa:e,base64:i},r)}return!0}catch(r){let{message:e}=r;return e}};var j=class extends Error{constructor(e,t){super(t);this.operator=e}},$=class extends Error{constructor(e,t){super(t);this.operator=e}},F=class extends Error{constructor(e,t,s){super(s);this.listOne=e,this.listTwo=t}},M=class extends Error{constructor(e,t){super(t);this.publicKey=e}};var B=class{validate(r){let e=Pr(r);if(e!==!0)throw new M(r,`${e}`);return!0}defaultMessage(){return"Invalid operator public key"}};B=c([(0,W.ValidatorConstraint)({name:"operatorPublicKey",async:!1})],B);function wr(i){return function(r,e){(0,W.registerDecorator)({target:r.constructor,propertyName:e,options:i,constraints:[],validator:B})}}var _=class{setData(r){r.id&&(this.id=r.id),r.publicKey&&(this.publicKey=r.publicKey)}validate(){(0,g.validateSync)(this)}};c([(0,g.IsNotEmpty)({message:"The operator id is null"}),(0,g.IsDefined)({message:"The operator id is undefined"}),(0,g.IsInt)({message:"The operator id must be an integer"})],_.prototype,"id",2),c([(0,g.IsNotEmpty)({message:"The operator public key is null"}),(0,g.IsDefined)({message:"The operator public key is undefined"}),(0,g.IsString)({message:"The operator public key must be a string"}),wr()],_.prototype,"publicKey",2);var Dr=v(n("underscore"));var pr;try{window.crypto,pr=n("bls-eth-wasm/browser")}catch(i){pr=n("bls-eth-wasm")}var u=pr;var Or=n("js-base64"),V=n("class-validator");var z=n("class-validator");var L=class{validate(r,e){let[t,s]=e.constraints;if(e.object[t].length!==r.length)throw new F(e.object[t],r,s.message);return!0}defaultMessage(){return"The length of the entries lists are not equal"}};L=c([(0,z.ValidatorConstraint)({name:"MatchLength",async:!1})],L);function J(i,r){return function(e,t){(0,z.registerDecorator)({target:e.constructor,propertyName:t,options:r,constraints:[i],validator:L})}}var Ar=v(n("web3")),k=new Ar.default,xr=(i,r)=>i.map(e=>{let t=r?Object(e)[r]:e;return String(t).startsWith("0x")?t:k.eth.abi.encodeParameter("string",t)});var R=class{setData(r){r.publicKeys&&(this.validateArrayOfStrings(r.publicKeys),this.publicKeys=r.publicKeys),r.encryptedKeys&&(this.validateArrayOfStrings(r.encryptedKeys),this.encryptedKeys=r.encryptedKeys)}validate(){this.validatePublicKeys(),this.validateEncryptedKeys()}validateEncryptedKeys(){let r="";try{(this.encryptedKeys||[]).map(e=>{let t=e;t.startsWith("0x")&&(r=t,t=k.eth.abi.decodeParameter("string",e)),(0,Or.decode)(String(t))})}catch(e){throw Error(`Can not ABI decode shares encrypted key: ${r}. Error: ${String(e)}`)}}validatePublicKeys(){let r="";try{for(let e of this.publicKeys||[])r=e,u.deserializeHexStrToPublicKey(e.replace("0x",""))}catch(e){throw Error(`Can not BLS deserialize shares public key: ${r}. Error: ${String(e)}`)}}validateArrayOfStrings(r){if(!Dr.default.isArray(r)||!r.every(t=>typeof t=="string"))throw Error("Keys should be an array of strings")}};c([(0,V.IsArray)(),(0,V.MinLength)(98,{each:!0})],R.prototype,"publicKeys",2),c([(0,V.IsArray)(),(0,V.MinLength)(98,{each:!0}),J("publicKeys",{message:"Length of encrypted and public keys should be equal."})],R.prototype,"encryptedKeys",2);var q=n("class-validator");var Y=class{validate(r){let e=new Set,t=new Set;for(let s of r||[]){if(e.has(s.id))throw new j(s,"Operator ID already exists");if(e.add(s.id),t.has(s.publicKey))throw new $(s,"Operator public key already exists");t.add(s.publicKey)}return!0}defaultMessage(){return"The list of operators contains duplicate entries"}};Y=c([(0,q.ValidatorConstraint)({name:"operatorsList",async:!1})],Y);function _r(i){return function(r,e){(0,q.registerDecorator)({target:r.constructor,propertyName:e,options:i,constraints:[],validator:Y})}}var Q=n("class-validator");var G=class extends Error{constructor(e,t){super(t);this.publicKey=e}};var U=class{validate(r){try{u.init(u.BLS12_381),u.deserializeHexStrToPublicKey(r.replace("0x",""))}catch(e){throw new G(r,"Failed to BLS deserialize validator public key")}return!0}defaultMessage(){return"Invalid public key"}};U=c([(0,Q.ValidatorConstraint)({name:"publicKey",async:!1})],U);function kr(i){return function(r,e){(0,Q.registerDecorator)({target:r.constructor,propertyName:e,options:i,constraints:[],validator:U})}}var E=class{constructor(){this.publicKey=null;this.operators=null;this.shares=null}setData(r){if(r.publicKey&&(this.publicKey=r.publicKey),r.operators&&(this.operators=r.operators.map(e=>{let t=new _;return t.setData(e),t})),r.shares){let e=new R;Rr.default.isArray(r.shares)?e.setData({publicKeys:r.shares.map(t=>t.publicKey),encryptedKeys:r.shares.map(t=>t.privateKey)}):e.setData(r.shares),this.shares=e}}validate(){return h(this,null,function*(){(0,m.validateSync)(this)})}get sharesPublicKeys(){var r;return((r=this.shares)==null?void 0:r.publicKeys)||[]}get sharesEncryptedKeys(){var r;return((r=this.shares)==null?void 0:r.encryptedKeys)||[]}get operatorIds(){var r;return(r=this.operators)!=null&&r.length?this.operators.map(e=>parseInt(String(e.id),10)):[]}get operatorPublicKeys(){var r;return(r=this.operators)!=null&&r.length?this.operators.map(e=>String(e.publicKey)):[]}};c([(0,m.IsOptional)(),(0,m.IsString)(),(0,m.Length)(98,98),kr()],E.prototype,"publicKey",2),c([(0,m.IsOptional)(),(0,m.ValidateNested)({each:!0}),_r()],E.prototype,"operators",2),c([(0,m.IsOptional)(),(0,m.ValidateNested)(),J("operators",{message:"Length of operators and shares should be equal."})],E.prototype,"shares",2);var lr=v(n("underscore"));var A=n("class-validator");var w=class{constructor(){this.readable=null;this.raw=null}build(r){return[r.validatorPublicKey,r.operatorsIds.join(","),r.encryptedShares.map(e=>e.publicKey),xr(r.encryptedShares,"privateKey"),r.ssvAmount]}setData(r){if(!r===null){this.raw=null,this.readable=null;return}if(lr.default.isArray(r)){this.raw=this.toRaw(r),this.readable=this.toReadable(r);return}lr.default.isObject(r)&&(r.readable&&(this.readable=r.readable),r.raw&&(this.raw=r.raw))}toRaw(r){return r.join(",")}toReadable(r){return{validatorPublicKey:r[w.PAYLOAD_INDEX_VALIDATOR_PUBLIC_KEY],operatorIds:r[w.PAYLOAD_INDEX_OPERATOR_IDS],sharePublicKeys:r[w.PAYLOAD_INDEX_SHARE_PUBLIC_KEYS],sharePrivateKey:r[w.PAYLOAD_INDEX_SHARE_PRIVATE_KEYS],ssvAmount:r[w.PAYLOAD_INDEX_SSV_AMOUNT]}}validate(){return h(this,null,function*(){})}},b=w;b.PAYLOAD_INDEX_VALIDATOR_PUBLIC_KEY=0,b.PAYLOAD_INDEX_OPERATOR_IDS=1,b.PAYLOAD_INDEX_SHARE_PUBLIC_KEYS=2,b.PAYLOAD_INDEX_SHARE_PRIVATE_KEYS=3,b.PAYLOAD_INDEX_SSV_AMOUNT=4,c([(0,A.IsOptional)(),(0,A.IsObject)()],b.prototype,"readable",2),c([(0,A.IsOptional)(),(0,A.IsString)()],b.prototype,"raw",2);var Z=class extends E{};var yr=v(n("underscore")),rr=v(n("ethers")),x=n("class-validator");var N=class{constructor(){this.readable=null;this.raw=null}decodeRSAShares(r){return r.map(e=>"0x"+Buffer.from(e,"base64").toString("hex"))}sharesToBytes(r,e){let t=this.decodeRSAShares(e),s=new Uint8Array(r.map(p=>[...rr.utils.arrayify(p)]).flat()),o=new Uint8Array(t.map(p=>[...rr.utils.arrayify(p)]).flat()),a=rr.utils.hexlify(s),y=String(a.length.toString(16)).padStart(4,"0"),l=Buffer.concat([s,o]);return`0x${y}${l.toString("hex")}`}build(r){return[r.validatorPublicKey,r.operatorsIds.join(","),this.sharesToBytes(r.encryptedShares.map(e=>e.publicKey),r.encryptedShares.map(e=>e.privateKey)),r.ssvAmount]}setData(r){if(!r===null){this.raw=null,this.readable=null;return}if(yr.default.isArray(r)){this.raw=this.toRaw(r),this.readable=this.toReadable(r);return}yr.default.isObject(r)&&(r.readable&&(this.readable=r.readable),r.raw&&(this.raw=r.raw))}toRaw(r){return r.join(",")}toReadable(r){return{validatorPublicKey:r[N.PAYLOAD_INDEX_VALIDATOR_PUBLIC_KEY],operatorIds:r[N.PAYLOAD_INDEX_OPERATOR_IDS],shares:r[N.PAYLOAD_INDEX_SHARES_KEYS],ssvAmount:r[N.PAYLOAD_INDEX_SSV_AMOUNT]}}validate(){}},S=N;S.PAYLOAD_INDEX_VALIDATOR_PUBLIC_KEY=0,S.PAYLOAD_INDEX_OPERATOR_IDS=1,S.PAYLOAD_INDEX_SHARES_KEYS=2,S.PAYLOAD_INDEX_SSV_AMOUNT=3,c([(0,x.IsOptional)(),(0,x.IsObject)()],S.prototype,"readable",2),c([(0,x.IsOptional)(),(0,x.IsString)()],S.prototype,"raw",2);var T=class{constructor({version:r}){this.byVersion={payload:{[T.VERSION_V2]:b,[T.VERSION_V3]:S},data:{[T.VERSION_V2]:E,[T.VERSION_V3]:Z}};this.version=r,this.data=this.getByVersion("data",r),this.payload=this.getByVersion("payload",r)}generateContractPayload(r){var t;let e=this.payload.build(r);(t=this.payload)==null||t.setData(e)}setData(r){!r||(this.data.setData(r),this.validate())}getByVersion(r,e){if(!this.byVersion[r])throw Error(`"${r}" is unknown entity`);if(!this.byVersion[r][e])throw Error(`"${r}" is not supported in version of key shares: ${e}`);return new this.byVersion[r][e]}validate(){var r,e;(r=this.payload)==null||r.validate(),(e=this.data)==null||e.validate(),(0,d.validateOrReject)(this).then().catch(t=>{throw Error(t)})}fromJson(r){return typeof r=="string"&&(r=JSON.parse(r)),this.setData(r.data),this}toJson(){return JSON.stringify({version:this.version,data:this.data||null,payload:this.payload||null,createdAt:new Date().toISOString()},null,"  ")}},K=T;K.VERSION_V2="v2",K.VERSION_V3="v3",c([(0,d.IsString)(),(0,d.IsDefined)(),(0,d.IsNotEmpty)()],K.prototype,"version",2),c([(0,d.IsOptional)(),(0,d.ValidateNested)()],K.prototype,"data",2),c([(0,d.IsOptional)(),(0,d.ValidateNested)()],K.prototype,"payload",2);var hr=class extends Error{constructor(e,t){super(t);this.operators=e}},ur=class extends Error{constructor(e,t){super(t);this.operator=e}},dr=class{constructor(){this.shares=[]}static get DEFAULT_THRESHOLD_NUMBER(){return 3}create(r,e){return h(this,null,function*(){e.map(s=>{if(!Number.isInteger(s))throw new ur(s,`Operator must be integer. Got: ${String(s)}`)});let t=(e.length-1)/3;if(!Number.isInteger(t))throw new hr(e,"Invalid operators length. It should satisfy conditions: \u2016 Operators \u2016 := 3 * F + 1 ; F \u2208 \u2115");return new Promise((s,o)=>{try{u.init(u.BLS12_381).then(()=>{let a=[],y=[];this.validatorPrivateKey=u.deserializeHexStrToSecretKey(r),this.validatorPublicKey=this.validatorPrivateKey.getPublicKey(),a.push(this.validatorPrivateKey),y.push(this.validatorPublicKey);for(let p=1;p<e.length-t;p+=1){let f=new u.SecretKey;f.setByCSPRNG(),a.push(f);let I=f.getPublicKey();y.push(I)}for(let p of e){let f=new u.Id;f.setInt(p);let I=new u.SecretKey;I.share(a,f);let P=new u.PublicKey;P.share(y,f),this.shares.push({privateKey:`0x${I.serializeToHexStr()}`,publicKey:`0x${P.serializeToHexStr()}`,id:f})}let l={validatorPrivateKey:`0x${this.validatorPrivateKey.serializeToHexStr()}`,validatorPublicKey:`0x${this.validatorPublicKey.serializeToHexStr()}`,shares:this.shares};s(l)})}catch(a){o(a)}})})}},er=dr;var mr=v(n("crypto")),Vr=n("scrypt-js"),tr=v(n("ethereumjs-wallet")),sr=n("ethereumjs-util");var fr=class{constructor(r){this.privateKey="";if(!r)throw new Error("Key store data should be JSON or string");if(typeof r=="string"?this.keyStoreData=JSON.parse(r):this.keyStoreData=r,!this.keyStoreData.version)throw new Error("Invalid keystore file")}getPublicKey(){var r;if(this.keyStoreData)switch((r=this.keyStoreData.version)!=null?r:this.keyStoreData.Version){case 1:return this.keyStoreData.Address;case 3:return this.keyStoreData.id;case 4:return this.keyStoreData.pubkey}return""}getPrivateKey(r=""){return h(this,null,function*(){if(this.privateKey)return this.privateKey;switch(this.keyStoreData.version){case 1:this.wallet=yield tr.default.fromV1(this.keyStoreData,r);break;case 3:this.wallet=yield tr.default.fromV3(this.keyStoreData,r,!0);break;case 4:this.wallet=yield this.fromV4(this.keyStoreData,r);break}if(this.wallet&&(this.privateKey=this.wallet.getPrivateKey().toString("hex"),!this.privateKey))throw new Error("Invalid password");return this.privateKey})}fromV4(r,e){return h(this,null,function*(){let t=typeof r=="object"?r:JSON.parse(r);if(t.version!==4)throw new Error("Not a V4 wallet");let s,o;if(t.crypto.kdf.function==="scrypt")o=t.crypto.kdf.params,s=(0,Vr.syncScrypt)(Buffer.from(e),Buffer.from(o.salt,"hex"),o.n,o.r,o.p,o.dklen);else if(t.crypto.kdf.function==="pbkdf2"){if(o=t.crypto.kdf.params,o.prf!=="hmac-sha256")throw new Error("Unsupported parameters to PBKDF2");s=mr.default.pbkdf2Sync(Buffer.from(e),Buffer.from(o.salt,"hex"),o.c,o.dklen,"sha256")}else throw new Error("Unsupported key derivation scheme");let a=Buffer.from(t.crypto.cipher.message,"hex"),y=Buffer.concat([Buffer.from(s.slice(16,32)),a]),p={keccak256:sr.keccak256,sha256:sr.sha256}[t.crypto.checksum.function];if(p(y).toString("hex")!==t.crypto.checksum.message)throw new Error("Invalid password");let I=mr.default.createDecipheriv(t.crypto.cipher.function,s.slice(0,16),Buffer.from(t.crypto.cipher.params.iv,"hex")),P=this.runCipherBuffer(I,a);return new tr.default(P)})}runCipherBuffer(r,e){return Buffer.concat([r.update(e),r.final()])}static toHexString(r){return Array.from(r,e=>`0${(e&255).toString(16)}`.slice(-2)).join("")}},ir=fr;var ar=class{constructor(r){if(!Object.values(ar.VERSION).includes(r))throw Error("Version is not supported");this.version=r,this.keySharesInstance=new K({version:this.version})}get keyShares(){return this.keySharesInstance}getPrivateKeyFromKeystoreData(r,e){return h(this,null,function*(){try{return yield new ir(r).getPrivateKey(e).then(s=>s)}catch(t){return t}})}createThreshold(r,e){return h(this,null,function*(){try{let t=new er;return this.threshold=yield t.create(r,e),this.threshold}catch(t){return t}})}encryptShares(r,e,t=""){return h(this,null,function*(){try{let s=r.map(a=>String((0,gr.encode)((0,Nr.default)(a))));return new O(s,e).encrypt().map(a=>(a.operatorPublicKey=(0,gr.encode)(a.operatorPublicKey),t===ar.SHARES_FORMAT_ABI&&(a.operatorPublicKey=k.eth.abi.encodeParameter("string",a.operatorPublicKey),a.privateKey=k.eth.abi.encodeParameter("string",a.privateKey)),a))}catch(s){return s}})}buildShares(r,e,t){return h(this,null,function*(){let s=yield this.createThreshold(r,e);return this.encryptShares(t,s.shares)})}getThreshold(){return this.threshold}getValidatorPublicKey(){var r;return((r=this.getThreshold())==null?void 0:r.validatorPublicKey)||""}buildPayload(r,e,t,s){return this.keyShares.generateContractPayload({validatorPublicKey:r,operatorsIds:e,encryptedShares:t,ssvAmount:s}),this.keyShares.payload}buildPayloadFromKeyShares(r,e){var y,l,p,f,I,P,br,Sr,Kr,Ir;let t=((l=(y=r.data)==null?void 0:y.shares)==null?void 0:l.publicKeys)||[],s=(p=r.data)==null?void 0:p.publicKey,o=((I=(f=r.data)==null?void 0:f.shares)==null?void 0:I.encryptedKeys)||[],a=((P=r.data)==null?void 0:P.operatorPublicKeys)||[];if(t.length!==o.length||t.length!==a.length||o.length!==a.length||!o.length||!a.length||!t.length)throw Error("Operator public keys and shares public/encrypted keys length does not match or have zero length.");return this.keyShares.generateContractPayload({validatorPublicKey:s,operatorsIds:(Sr=(br=r.data)==null?void 0:br.operators)==null?void 0:Sr.map(or=>or.id),encryptedShares:t.map((or,Tr)=>({publicKey:or,privateKey:o[Tr]})),ssvAmount:e||((Ir=(Kr=r.payload)==null?void 0:Kr.readable)==null?void 0:Ir.ssvAmount)||0}),this.keyShares.payload}},H=ar;H.SHARES_FORMAT_ABI="abi",H.VERSION={V2:"v2",V3:"v3"};})();
