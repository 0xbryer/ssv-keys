(()=>{var V=Object.create;var T=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var q=Object.getOwnPropertyNames;var J=Object.getPrototypeOf,U=Object.prototype.hasOwnProperty;var c=(s=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(s,{get:(e,r)=>(typeof require!="undefined"?require:e)[r]}):s)(function(s){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+s+'" is not supported')});var z=(s,e,r,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of q(e))!U.call(s,i)&&i!==r&&T(s,i,{get:()=>e[i],enumerable:!(t=j(e,i))||t.enumerable});return s};var m=(s,e,r)=>(r=s!=null?V(J(s)):{},z(e||!s||!s.__esModule?T(r,"default",{value:s,enumerable:!0}):r,s));var h=(s,e,r)=>new Promise((t,i)=>{var a=y=>{try{o(r.next(y))}catch(p){i(p)}},n=y=>{try{o(r.throw(y))}catch(p){i(p)}},o=y=>y.done?t(y.value):Promise.resolve(y.value).then(a,n);o((r=r.apply(s,e)).next())});var N=m(c("atob")),C=m(c("web3")),W=c("js-base64"),_=m(c("eth2-keystore-js"));var E;try{window.crypto,E=c("bls-eth-wasm/browser")}catch(s){E=c("bls-eth-wasm")}var l=E;var I=class extends Error{constructor(r,t){super(t);this.operators=r}},B=class extends Error{constructor(r,t){super(t);this.operator=r}},A=class{constructor(){this.shares=[]}static get DEFAULT_THRESHOLD_NUMBER(){return 3}create(e,r){return h(this,null,function*(){r.map(i=>{if(!Number.isInteger(i))throw new B(i,`Operator must be integer. Got: ${String(i)}`)});let t=(r.length-1)/3;if(!Number.isInteger(t))throw new I(r,"Invalid operators length. It should satisfy conditions: \u2016 Operators \u2016 := 3 * F + 1 ; F \u2208 \u2115");return new Promise((i,a)=>{try{l.init(l.BLS12_381).then(()=>{let n=[],o=[];this.validatorPrivateKey=l.deserializeHexStrToSecretKey(e),this.validatorPublicKey=this.validatorPrivateKey.getPublicKey(),n.push(this.validatorPrivateKey),o.push(this.validatorPublicKey);for(let p=1;p<r.length-t;p+=1){let u=new l.SecretKey;u.setByCSPRNG(),n.push(u);let f=u.getPublicKey();o.push(f)}for(let p of r){let u=new l.Id;u.setInt(p);let f=new l.SecretKey;f.share(n,u);let g=new l.PublicKey;g.share(o,u),this.shares.push({privateKey:`0x${f.serializeToHexStr()}`,publicKey:`0x${g.serializeToHexStr()}`,id:u})}let y={validatorPrivateKey:`0x${this.validatorPrivateKey.serializeToHexStr()}`,validatorPublicKey:`0x${this.validatorPublicKey.serializeToHexStr()}`,shares:this.shares};i(y)})}catch(n){a(n)}})})}},b=A;var K=c("js-base64");var O;try{window.crypto,O=c("jsencrypt").JSEncrypt}catch(s){O=c("node-jsencrypt")}var F=O;var S=class extends Error{constructor(r,t){super(t);this.operator=r}},d=class{constructor(e,r){this.operators=e,this.shares=r}encrypt(){let e=[];return Object.keys(this.operators).forEach(r=>{let t=new F({});try{try{t.setPublicKey(this.operators[r])}catch(n){t.setPublicKey((0,K.decode)(this.operators[r]))}}catch(n){throw new S({rsa:this.operators[r],base64:(0,K.encode)(this.operators[r])},`Operator is not valid RSA Public Key: ${n}`)}let i=t.encrypt(this.shares[r].privateKey),a={operatorPublicKey:this.operators[r],privateKey:String(i),publicKey:this.shares[r].publicKey};return e.push(a),a}),e}};var w=class{constructor(){this.web3Instances={}}getWeb3(e=process.env.NODE_URL||""){return this.web3Instances[e]||(this.web3Instances[e]=new C.default(String(e||""))),this.web3Instances[e]}getPrivateKeyFromKeystoreData(e,r){return h(this,null,function*(){try{try{e=JSON.parse(e)}catch(i){}return yield new _.default(e).getPrivateKey(r).then(i=>i)}catch(t){return t}})}createThreshold(e,r){return h(this,null,function*(){try{return new b().create(e,r)}catch(t){return t}})}encryptShares(i,a){return h(this,arguments,function*(e,r,t=w.OPERATOR_FORMAT_BASE64){try{let n=e.map(o=>(o=(0,N.default)(o),t==w.OPERATOR_FORMAT_BASE64?String((0,W.encode)(o)):o));return new d(n,r).encrypt()}catch(n){return n}})}abiEncode(e,r){return e.map(t=>this.getWeb3().eth.abi.encodeParameter("string",Object(t)[r]))}buildPayload(e,r,t,i){return h(this,null,function*(){let a=yield this.createThreshold(e,r),n=t.map(y=>y.publicKey),o=this.abiEncode(t,"privateKey");return[a.validatorPublicKey,`[${r.join(",")}]`,n,o,i]})}},v=w;v.OPERATOR_FORMAT_BASE64="base64";var H=m(c("web3")),P=class{constructor(){this.contractAddress="";this.nodeUrl="";this.contracts={};this.web3Instances={}}getWeb3(e=process.env.NODE_URL||""){return this.web3Instances[e]||(this.web3Instances[e]=new H.default(String(e||""))),this.web3Instances[e]}getLiquidationCollateral(){return h(this,null,function*(){return this.getContract().methods.minimumBlocksBeforeLiquidation().call()})}getNetworkFee(){return h(this,null,function*(){return this.getContract().methods.networkFee().call()})}getContract(){return this.contracts[this.contractAddress]||(this.contracts[this.contractAddress]=this.getWeb3(this.nodeUrl)),this.contracts[this.contractAddress]}setContractAddress(e){this.contractAddress=e}setNodeUrl(e){this.nodeUrl=e}};P.BLOCKS_PER_YEAR=2398050;var D=m(c("crypto")),$=c("scrypt-js"),x=m(c("ethereumjs-wallet")),k=c("ethereumjs-util"),R=class{constructor(e){this.privateKey="";if(!e)throw new Error("Key store data should be JSON or string");if(this.keyStoreData=JSON.parse(String(e)),!this.keyStoreData.version)throw new Error("Invalid keystore file")}getPublicKey(){var e;if(this.keyStoreData)switch((e=this.keyStoreData.version)!=null?e:this.keyStoreData.Version){case 1:return this.keyStoreData.Address;case 3:return this.keyStoreData.id;case 4:return this.keyStoreData.pubkey}return""}getPrivateKey(e=""){return h(this,null,function*(){if(this.privateKey)return this.privateKey;switch(this.keyStoreData.version){case 1:this.wallet=yield x.default.fromV1(this.keyStoreData,e);break;case 3:this.wallet=yield x.default.fromV3(this.keyStoreData,e,!0);break;case 4:this.wallet=yield this.fromV4(this.keyStoreData,e);break}if(this.wallet&&(this.privateKey=this.wallet.getPrivateKey().toString("hex"),!this.privateKey))throw new Error("Invalid password");return this.privateKey})}fromV4(e,r){return h(this,null,function*(){let t=typeof e=="object"?e:JSON.parse(e);if(t.version!==4)throw new Error("Not a V4 wallet");let i,a;if(t.crypto.kdf.function==="scrypt")a=t.crypto.kdf.params,i=yield(0,$.scrypt)(Buffer.from(r),Buffer.from(a.salt,"hex"),a.n,a.r,a.p,a.dklen);else if(t.crypto.kdf.function==="pbkdf2"){if(a=t.crypto.kdf.params,a.prf!=="hmac-sha256")throw new Error("Unsupported parameters to PBKDF2");i=D.default.pbkdf2Sync(Buffer.from(r),Buffer.from(a.salt,"hex"),a.c,a.dklen,"sha256")}else throw new Error("Unsupported key derivation scheme");let n=Buffer.from(t.crypto.cipher.message,"hex"),o=Buffer.concat([Buffer.from(i.slice(16,32)),n]);if({keccak256:k.keccak256,sha256:k.sha256}[t.crypto.checksum.function](o).toString("hex")!==t.crypto.checksum.message)throw new Error("Invalid password");let f=D.default.createDecipheriv(t.crypto.cipher.function,i.slice(0,16),Buffer.from(t.crypto.cipher.params.iv,"hex")),g=this.runCipherBuffer(f,n);return new x.default(g)})}runCipherBuffer(e,r){return Buffer.concat([e.update(r),e.final()])}static toHexString(e){return Array.from(e,r=>`0${(r&255).toString(16)}`.slice(-2)).join("")}},L=R;})();
